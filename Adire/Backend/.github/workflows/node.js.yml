name: Node.js CI

on:
  push:
    branches: ['develop']
  pull_request:
    branches: ['develop']

jobs:
  install-and-cache:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js and cache dependencies
        uses: actions/setup-node@v3
        with:
          node-version: 14.x # Use the desired Node.js version
          cache: 'npm'

      - run: yarn --ignore-engines --frozen-lockfile

      # Cache the dependencies for later use
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

  build:
    runs-on: ubuntu-latest
    needs: install-and-cache

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: yarn build
      - run: yarn test

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: srv-ck59e7uru70s739hi0q0
          api-key: rnd_oNUdM7jpAOnKhlPKg0Gh2mOkvJ42


      # Check the exit code of the deployment step and fail if it's not 0
      - name: Check deployment status
        run: |
          if [ $? -ne 0 ]; then
            echo "Deployment failed."
            exit 1
          fi

